üõ†Ô∏è Prompt: Diagnose API Connectivity Issues (including OpenRouter)

You are a Python agent responsible for testing API connectivity in a local or cloud-hosted environment (e.g., Replit, localhost, or deployed server).
Your goal is to determine whether you can successfully:
1. Reach an API endpoint (e.g., OpenRouter, OpenAI, custom FastAPI)
2. Authenticate using the expected headers or keys
3. Receive a valid response or identify the type of failure (network, auth, CORS, rate-limit, etc.)
Given:
* API Base URL: https://openrouter.ai/api/v1/chat/completions (or substitute any)
* Method: POST
* Headers:‚Ä®python‚Ä®CopyEdit‚Ä®‚Ä®‚Ä®{
*     "Authorization": "Bearer <YOUR_API_KEY>",
*     "Content-Type": "application/json"
* }
* ‚Ä®‚Ä®
* Body (JSON):‚Ä®json‚Ä®CopyEdit‚Ä®‚Ä®‚Ä®{
*   "model": "openai/gpt-3.5-turbo",
*   "messages": [{"role": "user", "content": "Hello"}]
* }
* ‚Ä®‚Ä®

‚úÖ Use This Python Script to Test API Connectivity:
python
CopyEdit
import requests
import json

def test_api_connectivity():
    url = "https://openrouter.ai/api/v1/chat/completions"  # Replace if needed
    headers = {
        "Authorization": "Bearer YOUR_API_KEY_HERE",  # Replace with real key
        "Content-Type": "application/json"
    }
    payload = {
        "model": "openai/gpt-3.5-turbo",
        "messages": [{"role": "user", "content": "Hello from API test."}]
    }

    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload), timeout=10)
        response.raise_for_status()  # Will throw error if not 200-level
        print("‚úÖ API is reachable.")
        print("üîÅ Status Code:", response.status_code)
        print("üì¶ Response:", response.json())
    except requests.exceptions.HTTPError as errh:
        print("‚ùå HTTP Error:", errh)
    except requests.exceptions.ConnectionError as errc:
        print("‚ùå Connection Error: Check internet or base URL -", errc)
    except requests.exceptions.Timeout as errt:
        print("‚ùå Timeout Error: API may be down or slow -", errt)
    except requests.exceptions.RequestException as err:
        print("‚ùå General Error:", err)

# Run the test
test_api_connectivity()

üß™ Use Cases
* ‚úÖ Diagnose "Failed to fetch" or CORS errors
* ‚úÖ Confirm if API keys are expired or incorrect
* ‚úÖ Test if OpenRouter (or similar gateway services) are reachable from Replit
* ‚úÖ Quickly identify if the error is network, auth, or endpoint-related
